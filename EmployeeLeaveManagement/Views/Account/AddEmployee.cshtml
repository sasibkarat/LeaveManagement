@model EmployeeLeaveManagement.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "Register";
}

<div class="row">
    <div class="col-sm-12">
        <h1>Registration</h1>
        <form novalidate="novalidate" action="/account/addemployee" method="post" class="needs-validation">
            @Html.AntiForgeryToken()
            <div class="form-row">
                <div class="form-group col-sm-12">
                    <label for="txtName">First Name</label>
                    <input type="text" class="form-control" id="txtFirstName" placeholder="Enter First name" name="FirstName" required="required" pattern="^[a-zA-Z ]*$" autofocus="autofocus" />
                    
                    <div class="invalid-feedback">
                        Please enter name [alphabets only].
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-sm-12">
                    <label for="txtName">Last Name</label>
                    <input type="text" class="form-control" id="txtLasstName" placeholder="Enter Last name" name="LastName" required="required" pattern="^[a-zA-Z ]*$" autofocus="autofocus" />
                    
                    <div class="invalid-feedback">
                        Please enter name [alphabets only].
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-sm-6">
                    <label for="txtEmail">Email</label>
                    <input type="email" class="form-control" id="txtEmail" placeholder="Email" name="Email" oninput="form.Email.pattern = escapeRegExp(this.value)" required="required" />
                    
                    <div class="invalid-feedback">
                        Invalid email
                    </div>
                    <small class="email-exist text-danger"></small>
                </div>

                <div class="form-group col-sm-6">
                    <label for="txtMobile">Contact Number</label>
                    <input type="text" class="form-control" id="txtContactNumber" placeholder="Mobile" name="ContactNumber" required="required" pattern="^[789]\d{9}$" />
                    
                    <div class="invalid-feedback">
                        Invalid mobile Number.
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-sm-6">
                    <label for="txtPassword">Password</label>
                    <input type="password" class="form-control" id="txtPassword" placeholder="Password" name="Password" required="required" minlength="6" oninput="form.ConfirmPassword.pattern = escapeRegExp(this.value)" />
                    
                    <div class="invalid-feedback">
                        Password must contain at least 6 characters.
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    <label for="txtPassword">Confirm Password</label>
                    <input type="password" class="form-control" id="txtConfirmPassword" placeholder="Confirm Password" name="ConfirmPassword" required="required" />
                   
                    <div class="invalid-feedback">
                        Password and Confirm Password do not match.
                    </div>
                </div>
            </div>

            <div class="form-row">

                <div class="form-row">
                    <div class="form-group col-sm-6">
                        <label for="txtName">Role ID </label>
                        <Select name="RoleID">
                            <option value="0">All</option>
                            <option value="1">HR</option>
                            <option value="2">Project Manager</option>
                            <option value="3">Developer</option>
                            <option value="4">Designer</option>

                        </Select>
                        @*<input type="text" class="form-control" id="txtRoleID" placeholder="Enter RoleID" name="RoleID" required="required" />
                <div class="valid-feedback">
                    Looks good!
                </div>
                <div class="invalid-feedback">
                    Please enter name [alphabets only].
                </div>*@
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-sm-6">
                        <label for="txtName">Special Permission</label>
                        <Select name="IsSpecialPermission">
                            <option value="0">NO</option>
                            <option value="1">YES</option>


                        </Select>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-sm-6">
                        <label for="txtName">Designation</label>
                        <Select name="Designation">
                            <option value="null">All</option>
                            <option value="HR">HR</option>
                            <option value="ProjectManager">Project Manager</option>
                            <option value="Developer">Developer</option>
                            <option value="Designer">Designer</option>


                        </Select>
                    </div>
                </div>



            </div>

                    <button type="submit" class="btn btn-primary">Register</button>
</form>
    </div>
</div>

<script>

    $("a[href='/account/register']").attr("id", "active");

    $(document).on("submit", ".needs-validation", validate);
    $(".needs-validation input").blur(validate);
    function validate(event)
    {
        if ($(".needs-validation")[0].checkValidity() == false || $(".email-exist").text() != "")
        {
            event.preventDefault();
        }
        $(".needs-validation")[0].classList.add("was-validated");
    }

    function escapeRegExp(str)
    {
        return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }

</script>
